INFO:	Looking for integrator chains
INFO:	found integrator chain: x6 -> x5
INFO:	found integrator chain: x4 -> x3
INFO:	found integrator chain: x2 -> x1
INFO:	########################################
INFO:	       ---- First Iteration ----
INFO:	########################################
INFO:	# spline parts: 4
INFO:	########################################
INFO:	#########  Initialise Splines  #########
INFO:	########################################
INFO:	makesteady: u1
TIME:	---> [makesteady() elapsed 0.001321 s]
INFO:	makesteady: x3
TIME:	---> [makesteady() elapsed 0.001066 s]
INFO:	makesteady: u2
TIME:	---> [makesteady() elapsed 0.000988 s]
INFO:	makesteady: x1
TIME:	---> [makesteady() elapsed 0.001007 s]
INFO:	makesteady: x6
TIME:	---> [makesteady() elapsed 0.001161 s]
INFO:	makesteady: x2
TIME:	---> [makesteady() elapsed 0.001044 s]
INFO:	makesteady: x5
TIME:	---> [makesteady() elapsed 0.001005 s]
INFO:	makesteady: x4
TIME:	---> [makesteady() elapsed 0.001003 s]
TIME:	---> [initSplines() elapsed 0.016103 s]
TIME:	---> [getGuess() elapsed 0.000155 s]
INFO:	########################################
INFO:	####  Building the equation system  ####
INFO:	########################################
TIME:	---> [buildEQS() elapsed 0.037877 s]
INFO:	########################################
INFO:	#####  Solving the equation system  ####
INFO:	########################################
INFO:	Run Levenberg-Marquardt method
INFO:	nIt= 1    res= 18.569289
INFO:	nIt= 2    res= 6.825367
INFO:	nIt= 3    res= 3.939955
INFO:	nIt= 4    res= 3.269649
INFO:	nIt= 5    res= 2.937907
INFO:	nIt= 6    res= 2.827446
INFO:	nIt= 7    res= 2.677363
INFO:	nIt= 8    res= 2.518758
INFO:	nIt= 9    res= 2.423214
INFO:	nIt= 10    res= 2.385862
INFO:	nIt= 11    res= 2.373883
INFO:	nIt= 12    res= 2.371327
INFO:	nIt= 13    res= 2.370631
INFO:	nIt= 14    res= 2.370442
INFO:	nIt= 15    res= 2.370392
INFO:	nIt= 16    res= 2.370380
INFO:	nIt= 17    res= 2.370376
TIME:	---> [solve() elapsed 0.120165 s]
INFO:	Set spline coefficients
TIME:	---> [setCoeff() elapsed 0.001514 s]
INFO:	########################################
INFO:	##  Solving the initial value problem ##
INFO:	########################################
INFO:	start: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
INFO:	----------------------------------------
TIME:	---> [simulate() elapsed 0.512223 s]
INFO:	Difference:
INFO:	x1 : 20.671709
INFO:	x2 : 11.971848
INFO:	x3 : -0.386673
INFO:	x4 : 2.220363
INFO:	x5 : -0.686392
INFO:	x6 : -0.041373
INFO:	--> reached desired accuracy: False
INFO:	########################################
INFO:	       ---- Next Iteration ----
INFO:	########################################
INFO:	# spline parts: 20
INFO:	########################################
INFO:	#########  Initialise Splines  #########
INFO:	########################################
INFO:	makesteady: u1
TIME:	---> [makesteady() elapsed 0.000947 s]
INFO:	makesteady: x3
TIME:	---> [makesteady() elapsed 0.002689 s]
INFO:	makesteady: u2
TIME:	---> [makesteady() elapsed 0.000826 s]
INFO:	makesteady: x1
TIME:	---> [makesteady() elapsed 0.002725 s]
INFO:	makesteady: x6
TIME:	---> [makesteady() elapsed 0.002559 s]
INFO:	makesteady: x2
TIME:	---> [makesteady() elapsed 0.002576 s]
INFO:	makesteady: x5
TIME:	---> [makesteady() elapsed 0.002714 s]
INFO:	makesteady: x4
TIME:	---> [makesteady() elapsed 0.002973 s]
TIME:	---> [initSplines() elapsed 0.041123 s]
INFO:	get new guess for spline x1
INFO:	get new guess for spline x2
INFO:	get new guess for spline x3
INFO:	get new guess for spline x4
INFO:	get new guess for spline x5
INFO:	get new guess for spline x6
TIME:	---> [getGuess() elapsed 0.019115 s]
INFO:	########################################
INFO:	####  Building the equation system  ####
INFO:	########################################
TIME:	---> [buildEQS() elapsed 0.080013 s]
INFO:	########################################
INFO:	#####  Solving the equation system  ####
INFO:	########################################
INFO:	Run Levenberg-Marquardt method
INFO:	nIt= 1    res= 5.813327
INFO:	nIt= 2    res= 3.771230
INFO:	nIt= 3    res= 3.430476
INFO:	nIt= 4    res= 3.292254
INFO:	nIt= 5    res= 3.116492
INFO:	nIt= 6    res= 2.618917
INFO:	nIt= 7    res= 1.552509
INFO:	nIt= 8    res= 0.608835
INFO:	nIt= 9    res= 0.076110
INFO:	nIt= 10    res= 0.048141
INFO:	nIt= 11    res= 0.048042
TIME:	---> [solve() elapsed 0.289606 s]
INFO:	Set spline coefficients
TIME:	---> [setCoeff() elapsed 0.005015 s]
INFO:	########################################
INFO:	##  Solving the initial value problem ##
INFO:	########################################
INFO:	start: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
INFO:	----------------------------------------
TIME:	---> [simulate() elapsed 0.515334 s]
INFO:	Difference:
INFO:	x1 : 0.004120
INFO:	x2 : -0.000283
INFO:	x3 : -0.004317
INFO:	x4 : -0.003021
INFO:	x5 : 0.000103
INFO:	x6 : -0.000021
INFO:	--> reached desired accuracy: True
TIME:	---> [Iteration elapsed 1.639139 s]
