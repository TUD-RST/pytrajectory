INFO:	########################################
INFO:	####   Analysing System Strucutre   ####
INFO:	########################################
INFO:	Looking for integrator chains
INFO:	found integrator chain: x4 -> x3
INFO:	found integrator chain: u1 -> x2 -> x1
1.8.0
0.7.5
0.13.3
INFO:	########################################
INFO:	       ---- First Iteration ----
INFO:	########################################
INFO:	# spline parts: 4
INFO:	########################################
INFO:	#########  Initialise Splines  #########
INFO:	########################################
INFO:	makesteady: x3
TIME:	---> [makesteady() elapsed 0.001424 s]
INFO:	makesteady: x1
TIME:	---> [makesteady() elapsed 0.001629 s]
TIME:	---> [initSplines() elapsed 0.006706 s]
TIME:	---> [getGuess() elapsed 0.000072 s]
INFO:	########################################
INFO:	####  Building the equation system  ####
INFO:	########################################
TIME:	---> [buildEQS() elapsed 0.055033 s]
INFO:	########################################
INFO:	#####  Solving the equation system  ####
INFO:	########################################
INFO:	Run Levenberg-Marquardt method
INFO:	nIt= 1    res= 28.057737
INFO:	nIt= 2    res= 23.859378
INFO:	nIt= 3    res= 16.326517
INFO:	nIt= 4    res= 4.834037
INFO:	nIt= 5    res= 1.960344
INFO:	nIt= 6    res= 1.105621
INFO:	nIt= 7    res= 0.377431
INFO:	nIt= 8    res= 0.029448
INFO:	nIt= 9    res= 0.000369
INFO:	nIt= 10    res= 0.000002
TIME:	---> [solve() elapsed 0.061830 s]
INFO:	Set spline coefficients
TIME:	---> [setCoeff() elapsed 0.001341 s]
INFO:	########################################
INFO:	##  Solving the initial value problem ##
INFO:	########################################
INFO:	start: [0.0, 0.0, 4.71238898038469, 0.0]
INFO:	----------------------------------------
TIME:	---> [simulate() elapsed 0.333629 s]
INFO:	Difference:
INFO:	x1 : 0.000112
INFO:	x2 : 0.000257
INFO:	x3 : -0.484215
INFO:	x4 : -1.114462
INFO:	--> reached desired accuracy: False
INFO:	########################################
INFO:	       ---- Next Iteration ----
INFO:	########################################
INFO:	# spline parts: 8
INFO:	########################################
INFO:	#########  Initialise Splines  #########
INFO:	########################################
INFO:	makesteady: x3
TIME:	---> [makesteady() elapsed 0.001358 s]
INFO:	makesteady: x1
TIME:	---> [makesteady() elapsed 0.001252 s]
TIME:	---> [initSplines() elapsed 0.005547 s]
INFO:	get new guess for spline x3
TIME:	---> [getGuess() elapsed 0.001083 s]
INFO:	########################################
INFO:	####  Building the equation system  ####
INFO:	########################################
TIME:	---> [buildEQS() elapsed 0.037638 s]
INFO:	########################################
INFO:	#####  Solving the equation system  ####
INFO:	########################################
INFO:	Run Levenberg-Marquardt method
INFO:	nIt= 1    res= 45.213366
INFO:	nIt= 2    res= 31.769395
INFO:	nIt= 3    res= 15.638562
INFO:	nIt= 4    res= 8.208592
INFO:	nIt= 5    res= 4.669730
INFO:	nIt= 6    res= 3.786669
INFO:	nIt= 7    res= 3.776233
INFO:	nIt= 8    res= 3.776212
INFO:	nIt= 9    res= 3.776212
TIME:	---> [solve() elapsed 0.082567 s]
INFO:	Set spline coefficients
TIME:	---> [setCoeff() elapsed 0.001504 s]
INFO:	########################################
INFO:	##  Solving the initial value problem ##
INFO:	########################################
INFO:	start: [0.0, 0.0, 4.71238898038469, 0.0]
INFO:	----------------------------------------
TIME:	---> [simulate() elapsed 0.360317 s]
INFO:	Difference:
INFO:	x1 : 0.000010
INFO:	x2 : 0.000011
INFO:	x3 : -0.435502
INFO:	x4 : -1.270965
INFO:	--> reached desired accuracy: False
INFO:	########################################
INFO:	       ---- Next Iteration ----
INFO:	########################################
INFO:	# spline parts: 16
INFO:	########################################
INFO:	#########  Initialise Splines  #########
INFO:	########################################
INFO:	makesteady: x3
TIME:	---> [makesteady() elapsed 0.002451 s]
INFO:	makesteady: x1
TIME:	---> [makesteady() elapsed 0.001609 s]
TIME:	---> [initSplines() elapsed 0.009275 s]
INFO:	get new guess for spline x3
TIME:	---> [getGuess() elapsed 0.002478 s]
INFO:	########################################
INFO:	####  Building the equation system  ####
INFO:	########################################
TIME:	---> [buildEQS() elapsed 0.051628 s]
INFO:	########################################
INFO:	#####  Solving the equation system  ####
INFO:	########################################
INFO:	Run Levenberg-Marquardt method
INFO:	nIt= 1    res= 54.207255
INFO:	nIt= 2    res= 23.327975
INFO:	nIt= 3    res= 15.890874
INFO:	nIt= 4    res= 5.789793
INFO:	nIt= 5    res= 3.819422
INFO:	nIt= 6    res= 3.202029
INFO:	nIt= 7    res= 3.198475
INFO:	nIt= 8    res= 3.198444
INFO:	nIt= 9    res= 3.198444
TIME:	---> [solve() elapsed 0.126929 s]
INFO:	Set spline coefficients
TIME:	---> [setCoeff() elapsed 0.001804 s]
INFO:	########################################
INFO:	##  Solving the initial value problem ##
INFO:	########################################
INFO:	start: [0.0, 0.0, 4.71238898038469, 0.0]
INFO:	----------------------------------------
TIME:	---> [simulate() elapsed 0.316750 s]
INFO:	Difference:
INFO:	x1 : -0.000129
INFO:	x2 : -0.000135
INFO:	x3 : -0.047359
INFO:	x4 : 0.054433
INFO:	--> reached desired accuracy: False
INFO:	########################################
INFO:	       ---- Next Iteration ----
INFO:	########################################
INFO:	# spline parts: 32
INFO:	########################################
INFO:	#########  Initialise Splines  #########
INFO:	########################################
INFO:	makesteady: x3
TIME:	---> [makesteady() elapsed 0.004314 s]
INFO:	makesteady: x1
TIME:	---> [makesteady() elapsed 0.001234 s]
TIME:	---> [initSplines() elapsed 0.012340 s]
INFO:	get new guess for spline x3
TIME:	---> [getGuess() elapsed 0.004722 s]
INFO:	########################################
INFO:	####  Building the equation system  ####
INFO:	########################################
TIME:	---> [buildEQS() elapsed 0.068338 s]
INFO:	########################################
INFO:	#####  Solving the equation system  ####
INFO:	########################################
INFO:	Run Levenberg-Marquardt method
INFO:	nIt= 1    res= 7.614795
INFO:	nIt= 2    res= 5.195577
INFO:	nIt= 3    res= 4.196053
INFO:	nIt= 4    res= 3.491790
INFO:	nIt= 5    res= 3.031373
INFO:	nIt= 6    res= 2.680280
INFO:	nIt= 7    res= 2.564609
INFO:	nIt= 8    res= 2.500357
INFO:	nIt= 9    res= 2.478780
INFO:	nIt= 10    res= 2.472679
INFO:	nIt= 11    res= 2.470821
INFO:	nIt= 12    res= 2.468752
INFO:	nIt= 13    res= 2.467975
INFO:	nIt= 14    res= 2.467243
INFO:	nIt= 15    res= 2.466375
INFO:	nIt= 16    res= 2.466089
INFO:	nIt= 17    res= 2.466014
INFO:	nIt= 18    res= 2.465983
INFO:	nIt= 19    res= 2.465968
INFO:	nIt= 20    res= 2.465956
TIME:	---> [solve() elapsed 0.549681 s]
INFO:	Set spline coefficients
TIME:	---> [setCoeff() elapsed 0.002451 s]
INFO:	########################################
INFO:	##  Solving the initial value problem ##
INFO:	########################################
INFO:	start: [0.0, 0.0, 4.71238898038469, 0.0]
INFO:	----------------------------------------
TIME:	---> [simulate() elapsed 0.312914 s]
INFO:	Difference:
INFO:	x1 : -0.000036
INFO:	x2 : -0.000004
INFO:	x3 : -0.182571
INFO:	x4 : -0.572840
INFO:	--> reached desired accuracy: False
INFO:	########################################
INFO:	       ---- Next Iteration ----
INFO:	########################################
INFO:	# spline parts: 64
INFO:	########################################
INFO:	#########  Initialise Splines  #########
INFO:	########################################
INFO:	makesteady: x3
TIME:	---> [makesteady() elapsed 0.013945 s]
INFO:	makesteady: x1
TIME:	---> [makesteady() elapsed 0.001305 s]
TIME:	---> [initSplines() elapsed 0.026992 s]
INFO:	get new guess for spline x3
TIME:	---> [getGuess() elapsed 0.011456 s]
INFO:	########################################
INFO:	####  Building the equation system  ####
INFO:	########################################
TIME:	---> [buildEQS() elapsed 0.128594 s]
INFO:	########################################
INFO:	#####  Solving the equation system  ####
INFO:	########################################
INFO:	Run Levenberg-Marquardt method
INFO:	nIt= 1    res= 3.493629
INFO:	nIt= 2    res= 2.177582
INFO:	nIt= 3    res= 1.721908
INFO:	nIt= 4    res= 1.678256
INFO:	nIt= 5    res= 1.546217
INFO:	nIt= 6    res= 1.512307
INFO:	nIt= 7    res= 1.469517
INFO:	nIt= 8    res= 1.461046
INFO:	nIt= 9    res= 1.452222
INFO:	nIt= 10    res= 1.447904
INFO:	nIt= 11    res= 1.444152
INFO:	nIt= 12    res= 1.441805
INFO:	nIt= 13    res= 1.439945
INFO:	nIt= 14    res= 1.438688
INFO:	nIt= 15    res= 1.437667
INFO:	nIt= 16    res= 1.436909
INFO:	nIt= 17    res= 1.436478
INFO:	nIt= 18    res= 1.435647
INFO:	nIt= 19    res= 1.435241
INFO:	nIt= 20    res= 1.434890
TIME:	---> [solve() elapsed 1.184852 s]
INFO:	Set spline coefficients
TIME:	---> [setCoeff() elapsed 0.003649 s]
INFO:	########################################
INFO:	##  Solving the initial value problem ##
INFO:	########################################
INFO:	start: [0.0, 0.0, 4.71238898038469, 0.0]
INFO:	----------------------------------------
TIME:	---> [simulate() elapsed 0.318619 s]
INFO:	Difference:
INFO:	x1 : 0.000188
INFO:	x2 : 0.000051
INFO:	x3 : -0.024865
INFO:	x4 : -0.075592
INFO:	--> reached desired accuracy: False
INFO:	########################################
INFO:	       ---- Next Iteration ----
INFO:	########################################
INFO:	# spline parts: 128
INFO:	########################################
INFO:	#########  Initialise Splines  #########
INFO:	########################################
INFO:	makesteady: x3
TIME:	---> [makesteady() elapsed 0.067195 s]
INFO:	makesteady: x1
TIME:	---> [makesteady() elapsed 0.001456 s]
TIME:	---> [initSplines() elapsed 0.091539 s]
INFO:	get new guess for spline x3
TIME:	---> [getGuess() elapsed 0.028434 s]
INFO:	########################################
INFO:	####  Building the equation system  ####
INFO:	########################################
TIME:	---> [buildEQS() elapsed 0.320997 s]
INFO:	########################################
INFO:	#####  Solving the equation system  ####
INFO:	########################################
INFO:	Run Levenberg-Marquardt method
INFO:	nIt= 1    res= 1.711824
INFO:	nIt= 2    res= 1.290749
INFO:	nIt= 3    res= 0.746283
INFO:	nIt= 4    res= 0.484502
INFO:	nIt= 5    res= 0.465261
INFO:	nIt= 6    res= 0.462893
TIME:	---> [solve() elapsed 0.857437 s]
INFO:	Set spline coefficients
TIME:	---> [setCoeff() elapsed 0.006185 s]
INFO:	########################################
INFO:	##  Solving the initial value problem ##
INFO:	########################################
INFO:	start: [0.0, 0.0, 4.71238898038469, 0.0]
INFO:	----------------------------------------
TIME:	---> [simulate() elapsed 0.318179 s]
INFO:	Difference:
INFO:	x1 : -0.000107
INFO:	x2 : -0.000195
INFO:	x3 : 0.001249
INFO:	x4 : 0.004128
INFO:	--> reached desired accuracy: True
TIME:	---> [Iteration elapsed 5.705944 s]
0
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
